# -*- coding: utf-8 -*-
"""Squash.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oQMuQMPLHsSQYXCzEtwzIIJygDfEe1Vn
"""

from google.colab import auth
auth.authenticate_user()

import gspread
from google.auth import default
creds, _ = default()
gc = gspread.authorize(creds)

# Convert to a DataFrame and render.
import pandas as pd

squash_sheet = gc.open('squash_records').sheet1
rows = squash_sheet.get_all_values()
colnames = rows[0]
data = rows[1:]
scores_df = pd.DataFrame(data,
                  columns=colnames)

scores_df['Set'] = scores_df['Set'].astype('int')
scores_df['Score'] = scores_df['Score'].astype('int')
scores_df['Date'] = pd.to_datetime(scores_df['Date'])
scores_df.dtypes

scores_df.head()

#get_set_winner('29-04-2024', 2)
def get_set_winner(df, date, set):
  # Get data
  date_set = df[(df['Date']==date) & (df['Set']==set)]

  # Get the score for the winner
  higher_score = date_set['Score'].max()

  # Get the name of the winner
  winner = date_set[date_set['Score'] == higher_score]['Player']

  return(winner.iloc[0])

def get_game_winner(df, date):
  # Counters to keep track of the tally over a game.
  j_wins = 0
  m_wins = 0

  # Gets the number of sets to loop through
  sets = df[df['Date'] == date]['Set'].unique()

  # Loops through the sets and adds 1 to the tally of Jakob wins or Matteo wins
  for set_num in sets:
    if get_set_winner(df, date, set_num) == 'Jakob':
      j_wins += 1
    else:
      m_wins += 1

  # Declare the winner!
  if j_wins > m_wins:
    winner = 'Jakob'
  elif m_wins > j_wins:
    winner = 'Matteo'
  else:
    winner = 'Draw'

  return(winner)

dates = scores_df['Date'].unique()

for date in dates:
  print(date, get_game_winner(scores_df, date))